//*************************************************************
//*
//* Copyright (c) 2016 : wang liang
//* License : Distributed under the GNU General Public License
//* created on : 4/14/2016,  by wang liang (wliked@outlook.com)
//*
//*************************************************************

#ifndef SELF_DEFINE_SINGLETON_HPP_
#define SELF_DEFINE_SINGLETON_HPP_

class Singleton
{
public:
    static Singleton* GetInstance();
    ~Singleton();
private:
    Singleton();    //private: forbidden it to be called by user and forbidden a default constructor generated by compiler
    Singleton(const Singleton& rhs);   //private: forbidden it to be called by user
    Singleton& operator=(const Singleton& rhs);   //private: forbidden it to be called by user
    static Singleton* instance;

    class GarbadeCollector     // a private embeded class of Singleton in order to delete instance
    {
    public:
        ~GarbadeCollector()
        {
            if (NULL != instance)
            {
                delete instance;
                instance = NULL;
            }
        }
    }
    static GarbadeCollector gc; // when OS clean gc, OS will call gc's destructor function,so memory pointed by "instance" will be deleted
};
#endif